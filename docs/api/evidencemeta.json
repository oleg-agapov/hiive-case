{"queries":[{"id":"monthly_totals","compiledQueryString":"with monthly_data as (\n    SELECT\n      monthly_report_date as report_month,\n      COUNT(CASE WHEN is_open_transaction THEN transaction_id END) AS open_transactions,\n      COUNT(CASE WHEN NOT is_open_transaction THEN transaction_id END) AS closed_transactions,\n      SUM(CASE WHEN is_open_transaction THEN gross_proceeds ELSE 0 END) AS open_gross_proceeds,\n      SUM(CASE WHEN NOT is_open_transaction THEN gross_proceeds ELSE 0 END) AS closed_gross_proceeds,\n    FROM hiive.fct_transaction_history\n    WHERE monthly_report_date IS NOT NULL\n    GROUP BY ALL\n  )\n\n  select\n    report_month,\n    open_transactions,\n    closed_transactions,\n    open_gross_proceeds,\n    closed_gross_proceeds,\n    coalesce(open_transactions / lag(open_transactions) OVER (ORDER BY report_month) - 1, 0) AS open_transactions_diff,\n    coalesce(closed_transactions / lag(closed_transactions) OVER (ORDER BY report_month) - 1, 0) AS closed_transactions_diff,\n    coalesce(open_gross_proceeds / lag(open_gross_proceeds) OVER (ORDER BY report_month) - 1, 0) AS open_gross_proceeds_diff,\n    coalesce(closed_gross_proceeds / lag(closed_gross_proceeds) OVER (ORDER BY report_month) - 1, 0) AS closed_gross_proceeds_diff,\n  from monthly_data\n  order by report_month desc","inputQueryString":"with monthly_data as (\n    SELECT\n      monthly_report_date as report_month,\n      COUNT(CASE WHEN is_open_transaction THEN transaction_id END) AS open_transactions,\n      COUNT(CASE WHEN NOT is_open_transaction THEN transaction_id END) AS closed_transactions,\n      SUM(CASE WHEN is_open_transaction THEN gross_proceeds ELSE 0 END) AS open_gross_proceeds,\n      SUM(CASE WHEN NOT is_open_transaction THEN gross_proceeds ELSE 0 END) AS closed_gross_proceeds,\n    FROM hiive.fct_transaction_history\n    WHERE monthly_report_date IS NOT NULL\n    GROUP BY ALL\n  )\n\n  select\n    report_month,\n    open_transactions,\n    closed_transactions,\n    open_gross_proceeds,\n    closed_gross_proceeds,\n    coalesce(open_transactions / lag(open_transactions) OVER (ORDER BY report_month) - 1, 0) AS open_transactions_diff,\n    coalesce(closed_transactions / lag(closed_transactions) OVER (ORDER BY report_month) - 1, 0) AS closed_transactions_diff,\n    coalesce(open_gross_proceeds / lag(open_gross_proceeds) OVER (ORDER BY report_month) - 1, 0) AS open_gross_proceeds_diff,\n    coalesce(closed_gross_proceeds / lag(closed_gross_proceeds) OVER (ORDER BY report_month) - 1, 0) AS closed_gross_proceeds_diff,\n  from monthly_data\n  order by report_month desc","compiled":false,"inline":true},{"id":"monthly_stats_per_state","compiledQueryString":"SELECT\n    monthly_report_date as report_month,\n    case when is_open_transaction then 'Open' else 'Closed' end as transaction_state,\n    COUNT(transaction_id) AS transactions,\n    SUM(gross_proceeds) AS gross_proceeds,\n  FROM hiive.fct_transaction_history\n  WHERE monthly_report_date IS NOT NULL\n  and transfer_method in ('direct', 'forward_contract')\n  GROUP BY ALL","inputQueryString":"SELECT\n    monthly_report_date as report_month,\n    case when is_open_transaction then 'Open' else 'Closed' end as transaction_state,\n    COUNT(transaction_id) AS transactions,\n    SUM(gross_proceeds) AS gross_proceeds,\n  FROM hiive.fct_transaction_history\n  WHERE monthly_report_date IS NOT NULL\n  and transfer_method in ('direct', 'forward_contract')\n  GROUP BY ALL","compiled":false,"inline":true},{"id":"monthly_stats_per_transfer_method","compiledQueryString":"SELECT\n    monthly_report_date as report_month,\n    transfer_method,\n    COUNT(CASE WHEN is_open_transaction THEN transaction_id END) AS open_transactions,\n    COUNT(CASE WHEN NOT is_open_transaction THEN transaction_id END) AS closed_transactions,\n    SUM(CASE WHEN is_open_transaction THEN gross_proceeds ELSE 0 END) AS open_gross_proceeds,\n    SUM(CASE WHEN NOT is_open_transaction THEN gross_proceeds ELSE 0 END) AS closed_gross_proceeds,\n  FROM hiive.fct_transaction_history\n  WHERE monthly_report_date IS NOT NULL\n  and transfer_method in ('direct', 'forward_contract')\n  GROUP BY ALL","inputQueryString":"SELECT\n    monthly_report_date as report_month,\n    transfer_method,\n    COUNT(CASE WHEN is_open_transaction THEN transaction_id END) AS open_transactions,\n    COUNT(CASE WHEN NOT is_open_transaction THEN transaction_id END) AS closed_transactions,\n    SUM(CASE WHEN is_open_transaction THEN gross_proceeds ELSE 0 END) AS open_gross_proceeds,\n    SUM(CASE WHEN NOT is_open_transaction THEN gross_proceeds ELSE 0 END) AS closed_gross_proceeds,\n  FROM hiive.fct_transaction_history\n  WHERE monthly_report_date IS NOT NULL\n  and transfer_method in ('direct', 'forward_contract')\n  GROUP BY ALL","compiled":false,"inline":true},{"id":"open_statuses","compiledQueryString":"SELECT 'Open' as status\n  UNION\n  SELECT 'Closed' as status","inputQueryString":"SELECT 'Open' as status\n  UNION\n  SELECT 'Closed' as status","compiled":false,"inline":true},{"id":"transaction_states","compiledQueryString":"SELECT\n    distinct transaction_state\n  FROM hiive.fct_transaction_history\n  WHERE transfer_method in ('direct', 'forward_contract')","inputQueryString":"SELECT\n    distinct transaction_state\n  FROM hiive.fct_transaction_history\n  WHERE transfer_method in ('direct', 'forward_contract')","compiled":false,"inline":true},{"id":"transfer_methods","compiledQueryString":"SELECT\n    distinct transfer_method\n  FROM hiive.fct_transaction_history\n  WHERE transfer_method in ('direct', 'forward_contract')","inputQueryString":"SELECT\n    distinct transfer_method\n  FROM hiive.fct_transaction_history\n  WHERE transfer_method in ('direct', 'forward_contract')","compiled":false,"inline":true},{"id":"historical_data","compiledQueryString":"SELECT\n    report_date,\n    COUNT(transaction_id) AS transactions,\n    SUM(gross_proceeds) AS gross_proceeds\n  FROM hiive.fct_transaction_history\n  WHERE CASE WHEN is_open_transaction THEN 'Open' ELSE 'Closed' END LIKE '${inputs.status.value}'\n    AND transaction_state LIKE '${inputs.transaction_state.value}'\n    AND transfer_method LIKE '${inputs.transfer_method.value}'\n  GROUP BY ALL\n  ORDER BY report_date","inputQueryString":"SELECT\n    report_date,\n    COUNT(transaction_id) AS transactions,\n    SUM(gross_proceeds) AS gross_proceeds\n  FROM hiive.fct_transaction_history\n  WHERE CASE WHEN is_open_transaction THEN 'Open' ELSE 'Closed' END LIKE '${inputs.status.value}'\n    AND transaction_state LIKE '${inputs.transaction_state.value}'\n    AND transfer_method LIKE '${inputs.transfer_method.value}'\n  GROUP BY ALL\n  ORDER BY report_date","compiled":false,"inline":true}]}